{"version":3,"sources":["components/Dialog.js","redux/actions/index.js","components/CheckboxGroup.js","components/Table.js","pages/Home.js","App.js","redux/reducers/index.js","index.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","disableTypography","className","Typography","IconButton","aria-label","onClick","connect","state","jobs","weekends","setJobs","payload","dispatch","a","type","open","handleDialogClose","useState","days","setDays","setState","Dialog","id","DialogContent","TextField","fullWidth","placeholder","value","onChange","event","target","Button","preventDefault","HOLIDAY","map","job","index","counter","momentDate","moment","Date","startOn","includes","format","weekday","add","newArr","variant","setWeekends","Saturday","Sunday","handleChange","name","checked","FormControl","component","FormLabel","FormGroup","FormControlLabel","control","Checkbox","label","weekend","push","size","StyledTableCell","head","backgroundColor","common","black","white","body","fontSize","TableCell","StyledTableRow","action","hover","TableRow","useStyles","makeStyles","table","setOpen","TableContainer","Table","TableHead","TableBody","key","scope","tasks","task","Divider","Home","App","initialState","Reducer","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db1e0832.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport PropTypes from \"prop-types\";\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { setJobs } from '../redux/actions/index';\r\n\r\n//muaterial-ui\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogContent,\r\n    IconButton,\r\n    TextField,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(5),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root}>\r\n            <Typography >{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst CustomDialog = (props) => {\r\n    const {\r\n        open,\r\n        handleDialogClose,\r\n        jobs,\r\n        weekends,\r\n        setJobs\r\n    } = props\r\n    const [days, setDays] = useState();\r\n    const [state, setState] = useState(jobs);\r\n\r\n    const handleDaysChange = (event) => {\r\n        (event.target.value > 0) && setDays(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault(); //to prevent auto reload\r\n\r\n        const HOLIDAY = ['2020-09-08'];\r\n\r\n        jobs.map((job, index) => {\r\n            var counter = 0, momentDate = moment(new Date(job.startOn));\r\n\r\n            //postpones the job by n days only if its not a on a holiday nor a weekend\r\n            if (!HOLIDAY.includes(momentDate.format('YYYY-MM-DD')) && !weekends.includes(momentDate.weekday())) {\r\n                while (counter < days) {\r\n                    momentDate = momentDate.add(1, 'days');\r\n\r\n                    //skips postponing a job to a holiday or a weekend\r\n                    if (!HOLIDAY.includes(momentDate.format('YYYY-MM-DD')) && !weekends.includes(momentDate.weekday())) {\r\n                        counter++\r\n                    }\r\n                }\r\n\r\n                //update the jobs state and set updated start date\r\n                let newArr = [...state]\r\n                newArr[index].startOn = momentDate.format('YYYY-MM-DD')\r\n                setState(newArr)\r\n            }\r\n        })\r\n        //const sortedJobs = state.sort((a, b) => new Date(a.startOn) - new Date(b.startOn));\r\n        setJobs(state);//update the jobs state in redux store\r\n        handleDialogClose(); //close dialog\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                onClose={handleDialogClose}\r\n                open={open}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleDialogClose}>\r\n                    Skip Each job by :\r\n                </DialogTitle>\r\n\r\n                <DialogContent >\r\n                    <form >\r\n                        <TextField\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            placeholder=\"days\"\r\n                            value={days}\r\n                            onChange={handleDaysChange}\r\n                        />\r\n                        <br /><br />\r\n                        <Button\r\n                            onClick={handleSubmit}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                        >\r\n                            Postpone\r\n                        </Button>\r\n                    </form>\r\n                </DialogContent>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nCustomDialog.propTypes = {\r\n    setJobs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jobs: state.jobs,\r\n        weekends: state.weekends,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setJobs })(CustomDialog);","export const setJobs = (payload) => async (dispatch) => {\r\n    dispatch({\r\n        type: 'SET_JOBS',\r\n        payload: payload\r\n    });\r\n};\r\n\r\nexport const setWeekends = (payload) => async (dispatch) => {\r\n    dispatch({\r\n        type: 'SET_WEEKENDS',\r\n        payload: payload\r\n    });\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport '../App.css';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { setWeekends } from '../redux/actions/index';\r\n\r\n//Material ui\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    FormLabel,\r\n    FormControl,\r\n    FormGroup,\r\n    FormControlLabel\r\n} from '@material-ui/core';\r\n\r\nconst Checkboxes = (props) => {\r\n    const { setWeekends } = props;\r\n\r\n    const [state, setState] = useState({\r\n        Saturday: false,\r\n        Sunday: false,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault(); //to prevent auto reload\r\n        const weekend = []\r\n        if (state.Saturday === false) {\r\n            weekend.push(6)\r\n        }\r\n        else if (state.Sunday === false) {\r\n            weekend.push(0)\r\n        }\r\n        setWeekends(weekend);\r\n    };\r\n\r\n    const { Saturday, Sunday } = state;\r\n\r\n    const weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\r\n\r\n    return (\r\n        <div className=\"Checkboxes\">\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Customize working days and hit save</FormLabel>\r\n                <FormGroup>\r\n                    {weekdays.map((weekday => (\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={true} name={weekday} />}\r\n                            label={weekday}\r\n                        />\r\n                    )))}\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={Saturday} onChange={handleChange} name=\"Saturday\" />}\r\n                        label=\"Saturday\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={Sunday} onChange={handleChange} name=\"Sunday\" />}\r\n                        label=\"Sunday\"\r\n                    />\r\n                    <Button onClick={handleSubmit}\r\n                        variant=\"contained\" color=\"secondary\" size=\"small\"> Save </Button>\r\n                </FormGroup>\r\n            </FormControl>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nCheckboxes.propTypes = {\r\n    setWeekends: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        weekends: state.weekends,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setWeekends })(Checkboxes);","import React, { useState } from 'react';\r\nimport Dialog from './Dialog';\r\nimport Checkboxes from './CheckboxGroup';\r\nimport '../App.css';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport moment from 'moment';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\n\r\n//Material ui\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Divider,\r\n} from '@material-ui/core';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        padding: 200,\r\n        backgroundColor: 'white',\r\n    },\r\n});\r\n\r\nconst CustomizedTables = (props) => {\r\n    const classes = useStyles();\r\n    const [jobs, setJobs] = useState(props.jobs);\r\n\r\n    //dialog state and handlers\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDialogClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleDialogOpen = (job) => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Table\" >\r\n\r\n            <div className=\"Settings\">\r\n                <Button onClick={handleDialogOpen} variant=\"contained\" color=\"secondary\">\r\n                    Skip each Job by n days\r\n                </Button>\r\n                <Dialog handleDialogClose={handleDialogClose} open={open}> </Dialog>\r\n                <Checkboxes />\r\n            </div>\r\n\r\n            <TableContainer >\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell >Start On</StyledTableCell>\r\n                            <StyledTableCell >Tasks</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n\r\n                        {jobs.map((job) => (\r\n                            <StyledTableRow key={job.startOn}>\r\n\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {moment(job.startOn).format('dddd')} {job.startOn}\r\n                                </StyledTableCell>\r\n\r\n                                <StyledTableCell >{job.tasks.map((task) => (\r\n                                    <div>\r\n                                        {task}\r\n                                        <Divider />\r\n                                    </div>\r\n\r\n                                ))}</StyledTableCell>\r\n\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer >\r\n        </div>\r\n    );\r\n}\r\n\r\nCustomizedTables.propTypes = {\r\n    jobs: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        jobs: state.jobs,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomizedTables);","import React from 'react';\r\nimport '../App.css';\r\n//custom\r\nimport Table from \"../components/Table\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"Home\">\r\n            <Table className=\"Table\"></Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport './App.css';\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    jobs: [{\r\n        startOn: \"2020-09-04\",\r\n        tasks: [\"Eat\", \"Sleep\", \"Code\", \"Repeat\"]\r\n    },\r\n    {\r\n        startOn: \"2020-09-05\",\r\n        tasks: [\"Eat\", \"Dance\"]\r\n    },\r\n    {\r\n        startOn: \"2020-09-06\",\r\n        tasks: [\"Do homework\"]\r\n    },\r\n    {\r\n        startOn: \"2020-09-07\",\r\n        tasks: [\"Finish project work\", \"Fix errors\"]\r\n    },\r\n    {\r\n        startOn: \"2020-09-08\",\r\n        tasks: [\"Go to play\", \"Learn React\"]\r\n    },\r\n    {\r\n        startOn: \"2020-09-09\",\r\n        tasks: [\"Chill\", \"Visit the doctor\"]\r\n    },\r\n    {\r\n        startOn: \"2020-09-10\",\r\n        tasks: [\"Code review\", \"Complete UI for project\"]\r\n    },\r\n    {\r\n        startOn: \"2020-09-11\",\r\n        tasks: [\"Complete documentation\", \"Commit requested changes\"]\r\n    },\r\n    {\r\n        startOn: \"2020-09-12\",\r\n        tasks: [\"Take cat for a walk\"]\r\n    },\r\n    {\r\n        startOn: \"2020-09-13\",\r\n        tasks: [\"Hang out with friends\"]\r\n    }\r\n    ],\r\n    weekends: [6, 0]\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_JOBS':\r\n            return {\r\n                ...state,\r\n                jobs: action.payload\r\n            }\r\n\r\n        case 'SET_WEEKENDS':\r\n            return {\r\n                ...state,\r\n                weekends: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './redux/reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\nexport default store;\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}